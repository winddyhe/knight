name: Java Tests

on:
  workflow_call:
    inputs:
      safe-checkout:
        required: true
        description: "The SHA key for the commit we want to run over"
        type: string

permissions:
  contents: read

jobs:
  linux:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: OpenJDK 8
            version: '8'
            image: us-docker.pkg.dev/protobuf-build/containers/test/linux/java:8-1fdbb997433cb22c1e49ef75ad374a8d6bb88702
            # TODO: b/318555165 - enable the layering check. Currently it does
            # not work correctly with the toolchain in this Docker image.
            targets: //java/... //java/internal:java_version //compatibility/... --features=-layering_check
          - name: OpenJDK 11
            version: '11'
            image: us-docker.pkg.dev/protobuf-build/containers/test/linux/java:11-1fdbb997433cb22c1e49ef75ad374a8d6bb88702
            targets: //java/... //java/internal:java_version //compatibility/...
          - name: OpenJDK 17
            version: '17'
            image: us-docker.pkg.dev/protobuf-build/containers/test/linux/java:17-1fdbb997433cb22c1e49ef75ad374a8d6bb88702
            targets: //java/... //java/internal:java_version //compatibility/...
          - name: aarch64
            version: 'aarch64'
            image: us-docker.pkg.dev/protobuf-build/containers/test/linux/emulation:aarch64-63dd26c0c7a808d92673a3e52e848189d4ab0f17
            targets: //java/... //compatibility/... //src/google/protobuf/compiler:protoc_aarch64_test

    name: Linux ${{ matrix.name }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout pending changes
        uses: protocolbuffers/protobuf-ci/checkout@v3
        with:
          ref: ${{ inputs.safe-checkout }}
      - name: Run tests
        uses: protocolbuffers/protobuf-ci/bazel-docker@v3
        with:
          image: ${{ matrix.image }}
          credentials: ${{ secrets.GAR_SERVICE_ACCOUNT }}
          bazel-cache: java_linux/${{ matrix.version }}
          bazel: test ${{ matrix.targets }} --test_env=KOKORO_JAVA_VERSION

# TODO restore this test (or a better one) when gRPC has rebuilt with 26.x
  # linkage-monitor:
  #   name: Linux Linkage Monitor
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout pending changes
  #       uses: protocolbuffers/protobuf-ci/checkout@v3
  #       with:
  #         ref: ${{ inputs.safe-checkout }}
  #     - name: Run Linkage Monitor test
  #       uses: protocolbuffers/protobuf-ci/bazel-docker@v3
  #       with:
  #         image: us-docker.pkg.dev/protobuf-build/containers/test/linux/java:8-1fdbb997433cb22c1e49ef75ad374a8d6bb88702
  #         credentials: ${{ secrets.GAR_SERVICE_ACCOUNT }}
  #         bazel-cache: java_linux/8
  #         # TODO: b/318555165 - enable the layering check. Currently it does
  #         # not work correctly with the toolchain in this Docker image.
  #         bazel: test --test_output=all //java:linkage_monitor --spawn_strategy=standalone --features=-layering_check

  protobuf-bom:
    name: Protobuf Maven BOM
    runs-on: ubuntu-latest
    steps:
    - name: Checkout pending changes
      uses: protocolbuffers/protobuf-ci/checkout@v3
      with:
        ref: ${{ inputs.safe-checkout }}
    - name: Generate maven artifacts with bazel and install using maven
      uses: protocolbuffers/protobuf-ci/bazel-docker@v3
      with:
        image: us-docker.pkg.dev/protobuf-build/containers/test/linux/java:11-1fdbb997433cb22c1e49ef75ad374a8d6bb88702
        credentials: ${{ secrets.GAR_SERVICE_ACCOUNT }}
        bazel-cache: java_linux/11
        bash: |
          set -ex
          bazel build //java:release
          mvn install:install-file -Dfile=java/bom/pom.xml -DpomFile=java/bom/pom.xml
          mvn install:install-file -Dfile=java/pom.xml -DpomFile=java/pom.xml
          mvn install:install-file -Dfile=bazel-bin/java/core/core_mvn-project.jar -DpomFile=bazel-bin/java/core/core_mvn-pom.xml
          mvn install:install-file -Dfile=bazel-bin/java/core/lite_mvn-project.jar -DpomFile=bazel-bin/java/core/lite_mvn-pom.xml
          mvn install:install-file -Dfile=bazel-bin/java/kotlin-lite/kotlin-lite_mvn-project.jar -DpomFile=bazel-bin/java/kotlin-lite/kotlin-lite_mvn-pom.xml
          mvn install:install-file -Dfile=bazel-bin/java/kotlin/kotlin_mvn-project.jar -DpomFile=bazel-bin/java/kotlin/kotlin_mvn-pom.xml
          mvn install:install-file -Dfile=bazel-bin/java/util/util_mvn-project.jar -DpomFile=bazel-bin/java/util/util_mvn-pom.xml
    - name: Clean up
      run: |
        sudo rm -rf _build
